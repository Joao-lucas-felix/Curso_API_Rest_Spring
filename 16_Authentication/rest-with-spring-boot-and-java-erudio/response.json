{"openapi":"3.0.1","info":{"title":"Course rest API with SpringBoot","description":"This API was made by a student, for a udemy course","termsOfService":"","license":{"name":"MIT License "}},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"People","description":"Endpoints for managing people"},{"name":"Books","description":"Endpoints for managing Books"}],"paths":{"/api/person/v1":{"get":{"tags":["People"],"summary":"Find all People","description":"Finding all people","operationId":"findAll","responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PersonDto"}}}}},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"put":{"tags":["People"],"summary":"Update a Person","description":"Update a Person","operationId":"updatePerson","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/PersonDto"}}},"required":true},"responses":{"200":{"description":"Update","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/PersonDto"}}}},"204":{"description":"No content"},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"post":{"tags":["People"],"summary":"Create a Person","description":"Create a new Person","operationId":"createPerson","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/PersonDto"}}},"required":true},"responses":{"200":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/PersonDto"}}}},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"500":{"description":"Internal server error"}}}},"/api/books/v1":{"get":{"tags":["Books"],"summary":"Find all books","description":"Searches in database for all books registers and returns in a array. The return format can be in xml json or yaml","operationId":"findAll_1","responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BookDto"}}},"application/x-yaml":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BookDto"}}},"application/xml":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BookDto"}}}}},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"put":{"tags":["Books"],"summary":"Update a book","description":"Receives a json, xml or yaml object with the fields: ID, Author, title, price, launch date. Searches for a object with this ID and Update the register with the received object","operationId":"updateBook","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BookDto"}}},"required":true},"responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BookDto"}}}},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"post":{"tags":["Books"],"summary":"Create a book","description":"Receives a json, xml or yaml object with the fields: Author, title, price, launch date. Persist this book in the database and returns the persisted object","operationId":"createBook","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BookDto"}}},"required":true},"responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BookDto"}}}},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}}},"/api/person/v1/{id}":{"get":{"tags":["People"],"summary":"Find a person by ID","description":"Finding a person by ID","operationId":"findByID","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/PersonDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/PersonDto"}}}},"204":{"description":"No content"},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"delete":{"tags":["People"],"summary":"Delete a Person","description":"Delete a Person","operationId":"delete","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"No content"},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}}},"/api/books/v1/{id}":{"get":{"tags":["Books"],"summary":"Find a book by ID","description":"Receives the id of a book, and searches in the database for a register, if the search was be successful returns a Json Xml or Yaml object who contains the fields: Author, price, title, id, and the launch date","operationId":"findById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Sucess","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/x-yaml":{"schema":{"$ref":"#/components/schemas/BookDto"}},"application/xml":{"schema":{"$ref":"#/components/schemas/BookDto"}}}},"204":{"description":"No content"},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}},"delete":{"tags":["Books"],"summary":"Delete a book","description":"Receives a value who represents the book id, searches in the database for this register, if successful remove the register of database.","operationId":"deleteBook","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"204":{"description":"No content"},"400":{"description":"Bad request"},"401":{"description":"Unauthorized"},"402":{"description":"Not found"},"500":{"description":"Internal server error"}}}}},"components":{"schemas":{"Links":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Link"}},"PersonDto":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"firstName":{"type":"string"},"lastName":{"type":"string"},"address":{"type":"string"},"gender":{"type":"string"},"_links":{"$ref":"#/components/schemas/Links"}}},"BookDto":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"author":{"type":"string"},"launch_date":{"type":"string","format":"date-time"},"price":{"type":"number","format":"double"},"title":{"type":"string"},"_links":{"$ref":"#/components/schemas/Links"}}},"Link":{"type":"object","properties":{"href":{"type":"string"},"hreflang":{"type":"string"},"title":{"type":"string"},"type":{"type":"string"},"deprecation":{"type":"string"},"profile":{"type":"string"},"name":{"type":"string"},"templated":{"type":"boolean"}}}}}}